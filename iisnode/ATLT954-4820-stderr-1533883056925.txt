Fri, 10 Aug 2018 06:37:38 GMT tedious deprecated The default value for `options.encrypt` will change from `false` to `true`. Please pass `false` explicitly if you want to retain current behaviour. at node_modules\mssql\lib\tedious.js:212:23
{ ConnectionError: Already connecting to database! Call close before connecting to different database.
    at ConnectionPool._connect (D:\SynchronryDashboardAPI\node_modules\mssql\lib\base.js:233:23)
    at PromiseLibrary (D:\SynchronryDashboardAPI\node_modules\mssql\lib\base.js:215:19)
    at new Promise (<anonymous>)
    at ConnectionPool.connect (D:\SynchronryDashboardAPI\node_modules\mssql\lib\base.js:214:12)
    at D:\SynchronryDashboardAPI\controller\loginController.js:12:14
    at Layer.handle [as handle_request] (D:\SynchronryDashboardAPI\node_modules\express\lib\router\layer.js:95:5)
    at next (D:\SynchronryDashboardAPI\node_modules\express\lib\router\route.js:137:13)
    at Route.dispatch (D:\SynchronryDashboardAPI\node_modules\express\lib\router\route.js:112:3)
    at Layer.handle [as handle_request] (D:\SynchronryDashboardAPI\node_modules\express\lib\router\layer.js:95:5)
    at D:\SynchronryDashboardAPI\node_modules\express\lib\router\index.js:281:22 code: 'EALREADYCONNECTING', name: 'ConnectionError' }
Fri, 10 Aug 2018 06:37:39 GMT tedious deprecated The `IntN` data type is internal and will be removed. at node_modules\mssql\lib\tedious.js:63:20
{ ConnectionError: Database is already connected! Call close before connecting to different database.
    at ConnectionPool._connect (D:\SynchronryDashboardAPI\node_modules\mssql\lib\base.js:229:23)
    at PromiseLibrary (D:\SynchronryDashboardAPI\node_modules\mssql\lib\base.js:215:19)
    at new Promise (<anonymous>)
    at ConnectionPool.connect (D:\SynchronryDashboardAPI\node_modules\mssql\lib\base.js:214:12)
    at D:\SynchronryDashboardAPI\controller\menuController.js:12:14
    at Layer.handle [as handle_request] (D:\SynchronryDashboardAPI\node_modules\express\lib\router\layer.js:95:5)
    at next (D:\SynchronryDashboardAPI\node_modules\express\lib\router\route.js:137:13)
    at Route.dispatch (D:\SynchronryDashboardAPI\node_modules\express\lib\router\route.js:112:3)
    at Layer.handle [as handle_request] (D:\SynchronryDashboardAPI\node_modules\express\lib\router\layer.js:95:5)
    at D:\SynchronryDashboardAPI\node_modules\express\lib\router\index.js:281:22 code: 'EALREADYCONNECTED', name: 'ConnectionError' }
Application has thrown an uncaught exception and is terminated:
TypeError: Cannot read property 'release' of null
    at ConnectionPool.release (D:\SynchronryDashboardAPI\node_modules\mssql\lib\base.js:197:15)
    at Request.tds.Request.err [as userCallback] (D:\SynchronryDashboardAPI\node_modules\mssql\lib\tedious.js:892:25)
    at Request._this.callback (D:\SynchronryDashboardAPI\node_modules\tedious\lib\request.js:60:27)
    at Connection.endOfMessageMarkerReceived (D:\SynchronryDashboardAPI\node_modules\tedious\lib\connection.js:1922:20)
    at Connection.dispatchEvent (D:\SynchronryDashboardAPI\node_modules\tedious\lib\connection.js:1004:38)
    at Parser.<anonymous> (D:\SynchronryDashboardAPI\node_modules\tedious\lib\connection.js:805:18)
    at emitOne (events.js:116:13)
    at Parser.emit (events.js:211:7)
    at Parser.<anonymous> (D:\SynchronryDashboardAPI\node_modules\tedious\lib\token\token-stream-parser.js:54:15)
    at emitOne (events.js:116:13)
